name: run unit tests and build and push image to docker hub
run-name: ${{ github.actor }}\'s run is being tested and pushed to docker hub
on:
  push:
    branches: [main]
jobs:
  test-and:
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME_TEST }}
      DB_UNAME: ${{ secrets.DB_UNAME }}
      DB_PASSWD: ${{ secrets.DB_PASSWD }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4.3.0
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: |
          python -m pytest
  build-image:
    runs-on: ubuntu-latest
    needs: test-and-build
    steps:
      - uses: actions/checkout@v3
      - name: Build image
        run: |
          docker build -t usebus-knee:latest .
      - name: Push image
        run: |
          docker tag usebus-knee  ${{ secrets.DOCKER_USERNAME }}/usebus-knee:$GITHUB_RUN_NUMBER
          docker tag usebus-knee ${{ secrets.DOCKER_USERNAME }}/usebus-knee:latest
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push --all-tags ${{ secrets.DOCKER_USERNAME }}/usebus-knee

  deploy-latest-docker-image-to-lightsail:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
    steps:
      - uses: actions/checkout@v3
      - name: package aws cloudformation template
        run: |
          aws cloudformation package --template ./aws/cloudformation.yml --s3-bucket ${{ secrets.AWS_CF_BUCKET }} --output-template-file ./aws/cloudformation_output.yml
      - name: deploy aws cloudformation template
        run: |
          aws cloudformation deploy --template-file ./aws/cloudformation_output.yml --s3-bucket ${{ secrets.AWS_CF_BUCKET }} --stack-name usebus --capabilities CAPABILITY_NAMED_IAM --parameter-overrides MongoUrl=${{ secrets.DB_HOST }} MongoDb=${{ secrets.DB_NAME }} MongoUser=${{ secrets.DB_UNAME }} MongoPassword=${{ secrets.DB_PASSWD }} DockerImageUrl=${{ secrets.DOCKER_USERNAME }}/usebus-knee:latest
